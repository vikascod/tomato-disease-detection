stages:
  data_ingestion:
    cmd: python src/TomatoDisease/pipeline/data_ingestion_pipeline.py
    deps:
      - src/TomatoDisease/pipeline/data_ingestion_pipeline.py
      - config/config.yaml
    outs:
      - artifacts/data_ingestion/PlantVillage


  prepare_base_model:
    cmd: python src/TomatoDisease/pipeline/prepare_base_model_pipeline.py
    deps:
      - src/TomatoDisease/pipeline/prepare_base_model_pipeline.py
      - config/config.yaml
    params:
      - IMAGE_SIZE
      - INCLUDE_TOP
      - CLASSES
      - WEIGHTS
      - LEARNING_RATE
    outs:
      - artifacts/prepare_base_model


  # training:
  #   cmd: python src\cnnClassifier\pipeline\training_03.py
  #   deps:
  #     - src\cnnClassifier\pipeline\training_03.py
  #     - src\cnnClassifier\components\prepare_callbacks.py
  #     - config/config.yaml
  #     - artifacts/data_ingestion/PlantVillage
  #     - artifacts/prepare_base_model
  #   params:
  #     - IMAGE_SIZE
  #     - EPOCHS
  #     - BATCH_SIZE
  #     - AUGMENTATION
  #   outs:
  #     - artifacts/training/model.h5


  # evaluation:
  #   cmd: python src\cnnClassifier\pipeline\evaluation_04.py
  #   deps:
  #     - src\cnnClassifier\pipeline\evaluation_04.py
  #     - config/config.yaml
  #     - artifacts/data_ingestion/PlantVillage
  #     - artifacts/training/model.h5
  #   params:
  #     - IMAGE_SIZE
  #     - BATCH_SIZE
  #   metrics:
  #   - scores.json:
  #       cache: false
